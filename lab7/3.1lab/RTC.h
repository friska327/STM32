#include "stm32f10x.h"

#define SEC_A_DAY 86400

uint32_t timer=1384850400+14400;

uint32_t tim;


typedef struct
	{
	int year;
	char mon;
	char mday;
	char hour;
	char min;
	char sec;
	char wday;
	} unix_cal;

void timer_to_cal (unsigned long timer, unix_cal * unix_time)
{
	unsigned long a;
	char b;
	char c;
	char d;
	unsigned long time;

	time = timer%SEC_A_DAY;
	a = ((timer+43200)/(86400>>1)) + (2440587<<1) + 1;
	a>>=1;
	unix_time->wday = a%7;
	a+=32044;
	b=(4*a+3)/146097;
	a=a-(146097*b)/4;
	c=(4*a+3)/1461;
	a=a-(1461*c)/4;
	d=(5*a+2)/153;
	unix_time->mday=a-(153*d+2)/5+1;
	unix_time->mon=d+3-12*(d/10);
	unix_time->year=100*b+c-4800+(d/10);
	unix_time->hour=time/3600;
	unix_time->min=(time%3600)/60;
	unix_time->sec=(time%3600)%60;
}

unsigned long cal_to_timer (unix_cal * unix_time)
{
	char a;
	int y;
	char m;
	unsigned long Uday;
	unsigned long time;

	a=((14-unix_time->mon)/12);
	y=unix_time->year+4800-a;
	m=unix_time->mon+(12*a)-3;
	Uday=(unix_time->mday+((153*m+2)/5)+365*y+(y/4)-(y/100)+(y/400)-32045)-2440588;
	time=Uday*86400;
	time+=unix_time->sec+unix_time->min*60+unix_time->hour*3600;
	return time;
}

	
	

void  RTC_INIT  (void)                                                                            //????????????? RTC
{
  if ((RCC->BDCR & RCC_BDCR_RTCEN) != RCC_BDCR_RTCEN)                 //???????? ?????? ?????, ???? ?? ????????, ?? ????????????????
  {
 RCC->APB1ENR |= RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN;  //???????? ???????????? PWR ? Backup
 PWR->CR |= PWR_CR_DBP;                                                            //????????? ?????? ? Backup ???????
 RCC->BDCR |= RCC_BDCR_BDRST;                                               //???????? Backup ???????
 RCC->BDCR &= ~RCC_BDCR_BDRST;
 RCC->BDCR |= RCC_BDCR_RTCEN | RCC_BDCR_RTCSEL_LSE;        //??????? LSE ???????? (????? 32768) ? ?????? ????????????
 RCC->BDCR |= RCC_BDCR_LSEON;                                                //???????? LSE
 while ((RCC->BDCR & RCC_BDCR_LSEON) != RCC_BDCR_LSEON){} //????????? ?????????
 BKP->RTCCR |= 3;                                                                         //?????????? RTC
 while (!(RTC->CRL & RTC_CRL_RTOFF));                                         //????????? ????????? ?? ????????? ????????? RTC
 RTC->CRL  |=  RTC_CRL_CNF;                                                        //????????? ?????? ? ???????? RTC
 RTC->PRLL  = 0x7FFF;                                                                    //???????? ???????? ?? 32768 (32767+1)
 RTC->CRL  &=  ~RTC_CRL_CNF;                                                     //????????? ?????? ? ???????? RTC
 while (!(RTC->CRL & RTC_CRL_RTOFF));                                         //????????? ????????? ??????
 RTC->CRL &= (uint16_t)~RTC_CRL_RSF;                                         //???????????????? RTC
 while((RTC->CRL & RTC_CRL_RSF) != RTC_CRL_RSF){}                  //????????? ?????????????
 PWR->CR &= ~PWR_CR_DBP;                                                         //????????? ?????? ? Backup ???????
  }
	
	unix_cal tmp;
	
	tmp.year = 2022;
	tmp.mon = 11;
	tmp.mday = 23;
	tmp.hour = 23;
	tmp.min = 6;
	tmp.sec = 30;
	tmp.wday = 1;
	
	timer = cal_to_timer(&tmp);
}
 
uint32_t RTC_GetCounter_(void)                                                             //???????? ???????? ????????
{
          return  (uint32_t)((RTC->CNTH << 16) | RTC->CNTL);
}
 
void RTC_SetCounter_(uint32_t count)                                                    //???????? ????? ???????? ????????
{
RCC->APB1ENR |= RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN;  //???????? ???????????? PWR ? Backup
PWR->CR |= PWR_CR_DBP;                                                            //????????? ?????? ? Backup ???????
while (!(RTC->CRL & RTC_CRL_RTOFF));                                         //????????? ????????? ?? ????????? ????????? RTC
RTC->CRL |= RTC_CRL_CNF;                                                          //????????? ?????? ? ???????? RTC
RTC->CNTH = count>>16;                                                              //???????? ????? ???????? ???????? ????????
RTC->CNTL = count;
RTC->CRL &= ~RTC_CRL_CNF;                                                       //????????? ?????? ? ???????? RTC
while (!(RTC->CRL & RTC_CRL_RTOFF));                                         //????????? ????????? ??????
PWR->CR &= ~PWR_CR_DBP;                                                         //????????? ?????? ? Backup ???????
}